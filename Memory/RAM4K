// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: tools/builtIn/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {

    IN  in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
    RAM512(in=in,load=r0,address=address[3..11],out=r0Out) ;
    RAM512(in=in,load=r1,address=address[3..11],out=r1Out) ;
    RAM512(in=in,load=r2,address=address[3..11],out=r2Out) ;
    RAM512(in=in,load=r3,address=address[3..11],out=r3Out) ;
    RAM512(in=in,load=r4,address=address[3..11],out=r4Out) ;
    RAM512(in=in,load=r5,address=address[3..11],out=r5Out) ;
    RAM512(in=in,load=r6,address=address[3..11],out=r6Out) ;
    RAM512(in=in,load=r7,address=address[3..11],out=r7Out) ;
    Mux8Way16(a=r0Out,b=r1Out,c=r2Out,d=r3Out,e=r4Out,f=r5Out,g=r6Out,h=r7Out,sel=address[0..2],out=out) ;
}
